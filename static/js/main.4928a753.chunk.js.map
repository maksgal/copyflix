{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLarge","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","original_title","name","trailer","items","id","videoId","console","log","window","onclick","className","map","onClick","src","poster_path","backdrop_path","alt","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundPosition","backgroundImage","original_name","overview","substr","Nav","show","handleshow","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4928a753.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport YouTube from \"react-youtube\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst YTAPI = \"AIzaSyAPHLhP-mMSznBTCuIuducoyb6iESlFpIg\";\n\nfunction Row({ title, fetchURL, isLarge }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      const trailer = await axios.get(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=${\n          movie.original_title ? movie.original_title : movie.name\n        }%20trailer&type=video&key=${YTAPI}`\n      );\n\n      setTrailerUrl(trailer.data.items[0].id.videoId);\n      console.log(trailer);\n      window.onclick = () => setTrailerUrl(\"\");\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster && ${isLarge && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLarge ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie?.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"f1c953c4492ce034a3c72ca8c25d1067\";\n\nconst requests = {\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n};\n\nexport default requests;","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport YouTube from \"react-youtube\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const YTAPI = \"AIzaSyAPHLhP-mMSznBTCuIuducoyb6iESlFpIg\";\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      const trailer = await axios.get(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=${\n          movie.original_title ? movie.original_title : movie.name\n        }%20trailer&type=video&key=${YTAPI}`\n      );\n\n      setTrailerUrl(trailer.data.items[0].id.videoId);\n      console.log(trailer);\n      window.onclick = () => setTrailerUrl(\"\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchDocumentaries);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n            )`,\n      }}>\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {movie?.title ||\n            movie?.name ||\n            movie?.original_name ||\n            movie?.original_title}\n        </h1>\n        <div className=\"buttons\">\n          <button className=\"banner__button\" onClick={() => handleClick(movie)}>\n            Play Trailer\n          </button>\n        </div>\n        <p className=\"banner__description\">{truncate(movie?.overview, 250)}</p>\n      </div>\n      <div className=\"banner--fadeBottom\"> </div>\n      {trailerUrl && (\n        <YouTube className=\"banner__trailer\" videoId={trailerUrl} opts={opts} />\n      )}\n    </header>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\nfunction Nav() {\n  const [show, handleshow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleshow(true);\n      } else handleshow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", window);\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"\n        alt=\"logo\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchURL={requests.fetchNetflixOriginals}\n        isLarge\n      />\n      <Row title=\"Trending now\" fetchURL={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\n      <Row title=\"Action\" fetchURL={requests.fetchActionMovies} />\n      <Row title=\"Comedy\" fetchURL={requests.fetchComedyMovies} />\n      <Row title=\"Horror\" fetchURL={requests.fetchHorrorMovies} />\n      <Row title=\"Romance\" fetchURL={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}